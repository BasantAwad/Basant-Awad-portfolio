{"ast":null,"code":"// Security utilities for the portfolio website\n\n// Content Security Policy (CSP) headers\nexport const CSP_HEADERS = {\n  'default-src': [\"'self'\"],\n  'script-src': [\"'self'\", \"'unsafe-inline'\", \"'unsafe-eval'\"],\n  'style-src': [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n  'font-src': [\"'self'\", \"https://fonts.gstatic.com\"],\n  'img-src': [\"'self'\", \"data:\", \"https:\"],\n  'connect-src': [\"'self'\", \"https://api.github.com\", \"https://www.linkedin.com\"],\n  'frame-src': [\"'self'\"],\n  'object-src': [\"'none'\"],\n  'base-uri': [\"'self'\"],\n  'form-action': [\"'self'\"],\n  'upgrade-insecure-requests': []\n};\n\n// Rate limiting configuration\nexport const RATE_LIMIT_CONFIG = {\n  windowMs: 15 * 60 * 1000,\n  // 15 minutes\n  max: 100,\n  // limit each IP to 100 requests per windowMs\n  message: 'Too many requests from this IP, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false\n};\n\n// Input validation and sanitization\nexport const sanitizeInput = input => {\n  if (typeof input !== 'string') return input;\n\n  // Remove potentially dangerous characters\n  return input.replace(/[<>]/g, '') // Remove < and >\n  .replace(/javascript:/gi, '') // Remove javascript: protocol\n  .replace(/on\\w+=/gi, '') // Remove event handlers\n  .trim();\n};\nexport const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport const validateName = name => {\n  const nameRegex = /^[a-zA-Z\\s]{2,50}$/;\n  return nameRegex.test(name);\n};\nexport const validateMessage = message => {\n  return message.length >= 10 && message.length <= 1000;\n};\n\n// XSS Protection\nexport const escapeHtml = text => {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;'\n  };\n  return text.replace(/[&<>\"']/g, m => map[m]);\n};\n\n// CSRF Protection\nexport const generateCSRFToken = () => {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\nexport const validateCSRFToken = (token, storedToken) => {\n  return token === storedToken;\n};\n\n// Password strength validation\nexport const validatePasswordStrength = password => {\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const score = [password.length >= minLength, hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChar].filter(Boolean).length;\n  return {\n    score,\n    isStrong: score >= 4,\n    feedback: {\n      length: password.length >= minLength ? '✓' : `At least ${minLength} characters`,\n      uppercase: hasUpperCase ? '✓' : 'Include uppercase letter',\n      lowercase: hasLowerCase ? '✓' : 'Include lowercase letter',\n      numbers: hasNumbers ? '✓' : 'Include number',\n      special: hasSpecialChar ? '✓' : 'Include special character'\n    }\n  };\n};\n\n// File upload validation\nexport const validateFileUpload = (file, allowedTypes, maxSize) => {\n  const allowedMimeTypes = allowedTypes || ['image/jpeg', 'image/png', 'image/gif', 'application/pdf'];\n  const maxFileSize = maxSize || 5 * 1024 * 1024; // 5MB default\n\n  if (!file) return {\n    valid: false,\n    error: 'No file provided'\n  };\n  if (!allowedMimeTypes.includes(file.type)) {\n    return {\n      valid: false,\n      error: 'File type not allowed'\n    };\n  }\n  if (file.size > maxFileSize) {\n    return {\n      valid: false,\n      error: 'File size too large'\n    };\n  }\n  return {\n    valid: true\n  };\n};\n\n// Session management\nexport const createSecureSession = userId => {\n  const sessionId = generateCSRFToken();\n  const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\n\n  return {\n    id: sessionId,\n    userId,\n    expiresAt,\n    createdAt: new Date()\n  };\n};\nexport const isSessionValid = session => {\n  if (!session || !session.expiresAt) return false;\n  return new Date() < new Date(session.expiresAt);\n};\n\n// API Security\nexport const createAPIKey = () => {\n  return 'api_' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\nexport const validateAPIKey = apiKey => {\n  const apiKeyRegex = /^api_[a-z0-9]{26}$/;\n  return apiKeyRegex.test(apiKey);\n};\n\n// Logging and monitoring\nexport const logSecurityEvent = (event, details) => {\n  const timestamp = new Date().toISOString();\n  const logEntry = {\n    timestamp,\n    event,\n    details,\n    userAgent: navigator.userAgent,\n    url: window.location.href\n  };\n\n  // In production, send to logging service\n  console.log('Security Event:', logEntry);\n\n  // Store in localStorage for demo purposes\n  const securityLogs = JSON.parse(localStorage.getItem('securityLogs') || '[]');\n  securityLogs.push(logEntry);\n  if (securityLogs.length > 100) securityLogs.shift(); // Keep only last 100 logs\n  localStorage.setItem('securityLogs', JSON.stringify(securityLogs));\n};\n\n// Environment-based security\nexport const isProduction = () => {\n  return process.env.NODE_ENV === 'production';\n};\nexport const getSecurityHeaders = () => {\n  const baseHeaders = {\n    'X-Content-Type-Options': 'nosniff',\n    'X-Frame-Options': 'DENY',\n    'X-XSS-Protection': '1; mode=block',\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\n    'Permissions-Policy': 'geolocation=(), microphone=(), camera=()'\n  };\n  if (isProduction()) {\n    baseHeaders['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains';\n    baseHeaders['Content-Security-Policy'] = Object.entries(CSP_HEADERS).map(([key, values]) => `${key} ${values.join(' ')}`).join('; ');\n  }\n  return baseHeaders;\n};\n\n// Security middleware for forms\nexport const secureFormSubmission = (formData, validationRules) => {\n  const errors = {};\n  const sanitizedData = {};\n  Object.keys(validationRules).forEach(field => {\n    const value = formData[field];\n    const rules = validationRules[field];\n    if (rules.required && !value) {\n      errors[field] = `${field} is required`;\n      return;\n    }\n    if (value) {\n      // Sanitize input\n      let sanitizedValue = sanitizeInput(value);\n\n      // Apply validation rules\n      if (rules.minLength && sanitizedValue.length < rules.minLength) {\n        errors[field] = `${field} must be at least ${rules.minLength} characters`;\n        return;\n      }\n      if (rules.maxLength && sanitizedValue.length > rules.maxLength) {\n        errors[field] = `${field} must be no more than ${rules.maxLength} characters`;\n        return;\n      }\n      if (rules.pattern && !rules.pattern.test(sanitizedValue)) {\n        errors[field] = rules.message || `${field} format is invalid`;\n        return;\n      }\n      sanitizedData[field] = sanitizedValue;\n    }\n  });\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors,\n    sanitizedData\n  };\n};\n\n// Export default security configuration\nexport default {\n  CSP_HEADERS,\n  RATE_LIMIT_CONFIG,\n  sanitizeInput,\n  validateEmail,\n  validateName,\n  validateMessage,\n  escapeHtml,\n  generateCSRFToken,\n  validateCSRFToken,\n  validatePasswordStrength,\n  validateFileUpload,\n  createSecureSession,\n  isSessionValid,\n  createAPIKey,\n  validateAPIKey,\n  logSecurityEvent,\n  isProduction,\n  getSecurityHeaders,\n  secureFormSubmission\n};","map":{"version":3,"names":["CSP_HEADERS","RATE_LIMIT_CONFIG","windowMs","max","message","standardHeaders","legacyHeaders","sanitizeInput","input","replace","trim","validateEmail","email","emailRegex","test","validateName","name","nameRegex","validateMessage","length","escapeHtml","text","map","m","generateCSRFToken","Math","random","toString","substring","validateCSRFToken","token","storedToken","validatePasswordStrength","password","minLength","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","score","filter","Boolean","isStrong","feedback","uppercase","lowercase","numbers","special","validateFileUpload","file","allowedTypes","maxSize","allowedMimeTypes","maxFileSize","valid","error","includes","type","size","createSecureSession","userId","sessionId","expiresAt","Date","now","id","createdAt","isSessionValid","session","createAPIKey","validateAPIKey","apiKey","apiKeyRegex","logSecurityEvent","event","details","timestamp","toISOString","logEntry","userAgent","navigator","url","window","location","href","console","log","securityLogs","JSON","parse","localStorage","getItem","push","shift","setItem","stringify","isProduction","process","env","NODE_ENV","getSecurityHeaders","baseHeaders","Object","entries","key","values","join","secureFormSubmission","formData","validationRules","errors","sanitizedData","keys","forEach","field","value","rules","required","sanitizedValue","maxLength","pattern","isValid"],"sources":["C:/Users/Pc/protofolio/src/utils/security.js"],"sourcesContent":["// Security utilities for the portfolio website\r\n\r\n// Content Security Policy (CSP) headers\r\nexport const CSP_HEADERS = {\r\n  'default-src': [\"'self'\"],\r\n  'script-src': [\"'self'\", \"'unsafe-inline'\", \"'unsafe-eval'\"],\r\n  'style-src': [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\r\n  'font-src': [\"'self'\", \"https://fonts.gstatic.com\"],\r\n  'img-src': [\"'self'\", \"data:\", \"https:\"],\r\n  'connect-src': [\"'self'\", \"https://api.github.com\", \"https://www.linkedin.com\"],\r\n  'frame-src': [\"'self'\"],\r\n  'object-src': [\"'none'\"],\r\n  'base-uri': [\"'self'\"],\r\n  'form-action': [\"'self'\"],\r\n  'upgrade-insecure-requests': []\r\n};\r\n\r\n// Rate limiting configuration\r\nexport const RATE_LIMIT_CONFIG = {\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 100, // limit each IP to 100 requests per windowMs\r\n  message: 'Too many requests from this IP, please try again later.',\r\n  standardHeaders: true,\r\n  legacyHeaders: false,\r\n};\r\n\r\n// Input validation and sanitization\r\nexport const sanitizeInput = (input) => {\r\n  if (typeof input !== 'string') return input;\r\n  \r\n  // Remove potentially dangerous characters\r\n  return input\r\n    .replace(/[<>]/g, '') // Remove < and >\r\n    .replace(/javascript:/gi, '') // Remove javascript: protocol\r\n    .replace(/on\\w+=/gi, '') // Remove event handlers\r\n    .trim();\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const validateName = (name) => {\r\n  const nameRegex = /^[a-zA-Z\\s]{2,50}$/;\r\n  return nameRegex.test(name);\r\n};\r\n\r\nexport const validateMessage = (message) => {\r\n  return message.length >= 10 && message.length <= 1000;\r\n};\r\n\r\n// XSS Protection\r\nexport const escapeHtml = (text) => {\r\n  const map = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#039;'\r\n  };\r\n  return text.replace(/[&<>\"']/g, (m) => map[m]);\r\n};\r\n\r\n// CSRF Protection\r\nexport const generateCSRFToken = () => {\r\n  return Math.random().toString(36).substring(2, 15) + \r\n         Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\nexport const validateCSRFToken = (token, storedToken) => {\r\n  return token === storedToken;\r\n};\r\n\r\n// Password strength validation\r\nexport const validatePasswordStrength = (password) => {\r\n  const minLength = 8;\r\n  const hasUpperCase = /[A-Z]/.test(password);\r\n  const hasLowerCase = /[a-z]/.test(password);\r\n  const hasNumbers = /\\d/.test(password);\r\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n  \r\n  const score = [\r\n    password.length >= minLength,\r\n    hasUpperCase,\r\n    hasLowerCase,\r\n    hasNumbers,\r\n    hasSpecialChar\r\n  ].filter(Boolean).length;\r\n  \r\n  return {\r\n    score,\r\n    isStrong: score >= 4,\r\n    feedback: {\r\n      length: password.length >= minLength ? '✓' : `At least ${minLength} characters`,\r\n      uppercase: hasUpperCase ? '✓' : 'Include uppercase letter',\r\n      lowercase: hasLowerCase ? '✓' : 'Include lowercase letter',\r\n      numbers: hasNumbers ? '✓' : 'Include number',\r\n      special: hasSpecialChar ? '✓' : 'Include special character'\r\n    }\r\n  };\r\n};\r\n\r\n// File upload validation\r\nexport const validateFileUpload = (file, allowedTypes, maxSize) => {\r\n  const allowedMimeTypes = allowedTypes || ['image/jpeg', 'image/png', 'image/gif', 'application/pdf'];\r\n  const maxFileSize = maxSize || 5 * 1024 * 1024; // 5MB default\r\n  \r\n  if (!file) return { valid: false, error: 'No file provided' };\r\n  \r\n  if (!allowedMimeTypes.includes(file.type)) {\r\n    return { valid: false, error: 'File type not allowed' };\r\n  }\r\n  \r\n  if (file.size > maxFileSize) {\r\n    return { valid: false, error: 'File size too large' };\r\n  }\r\n  \r\n  return { valid: true };\r\n};\r\n\r\n// Session management\r\nexport const createSecureSession = (userId) => {\r\n  const sessionId = generateCSRFToken();\r\n  const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\r\n  \r\n  return {\r\n    id: sessionId,\r\n    userId,\r\n    expiresAt,\r\n    createdAt: new Date()\r\n  };\r\n};\r\n\r\nexport const isSessionValid = (session) => {\r\n  if (!session || !session.expiresAt) return false;\r\n  return new Date() < new Date(session.expiresAt);\r\n};\r\n\r\n// API Security\r\nexport const createAPIKey = () => {\r\n  return 'api_' + Math.random().toString(36).substring(2, 15) + \r\n         Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\nexport const validateAPIKey = (apiKey) => {\r\n  const apiKeyRegex = /^api_[a-z0-9]{26}$/;\r\n  return apiKeyRegex.test(apiKey);\r\n};\r\n\r\n// Logging and monitoring\r\nexport const logSecurityEvent = (event, details) => {\r\n  const timestamp = new Date().toISOString();\r\n  const logEntry = {\r\n    timestamp,\r\n    event,\r\n    details,\r\n    userAgent: navigator.userAgent,\r\n    url: window.location.href\r\n  };\r\n  \r\n  // In production, send to logging service\r\n  console.log('Security Event:', logEntry);\r\n  \r\n  // Store in localStorage for demo purposes\r\n  const securityLogs = JSON.parse(localStorage.getItem('securityLogs') || '[]');\r\n  securityLogs.push(logEntry);\r\n  if (securityLogs.length > 100) securityLogs.shift(); // Keep only last 100 logs\r\n  localStorage.setItem('securityLogs', JSON.stringify(securityLogs));\r\n};\r\n\r\n// Environment-based security\r\nexport const isProduction = () => {\r\n  return process.env.NODE_ENV === 'production';\r\n};\r\n\r\nexport const getSecurityHeaders = () => {\r\n  const baseHeaders = {\r\n    'X-Content-Type-Options': 'nosniff',\r\n    'X-Frame-Options': 'DENY',\r\n    'X-XSS-Protection': '1; mode=block',\r\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\r\n    'Permissions-Policy': 'geolocation=(), microphone=(), camera=()'\r\n  };\r\n  \r\n  if (isProduction()) {\r\n    baseHeaders['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains';\r\n    baseHeaders['Content-Security-Policy'] = Object.entries(CSP_HEADERS)\r\n      .map(([key, values]) => `${key} ${values.join(' ')}`)\r\n      .join('; ');\r\n  }\r\n  \r\n  return baseHeaders;\r\n};\r\n\r\n// Security middleware for forms\r\nexport const secureFormSubmission = (formData, validationRules) => {\r\n  const errors = {};\r\n  const sanitizedData = {};\r\n  \r\n  Object.keys(validationRules).forEach(field => {\r\n    const value = formData[field];\r\n    const rules = validationRules[field];\r\n    \r\n    if (rules.required && !value) {\r\n      errors[field] = `${field} is required`;\r\n      return;\r\n    }\r\n    \r\n    if (value) {\r\n      // Sanitize input\r\n      let sanitizedValue = sanitizeInput(value);\r\n      \r\n      // Apply validation rules\r\n      if (rules.minLength && sanitizedValue.length < rules.minLength) {\r\n        errors[field] = `${field} must be at least ${rules.minLength} characters`;\r\n        return;\r\n      }\r\n      \r\n      if (rules.maxLength && sanitizedValue.length > rules.maxLength) {\r\n        errors[field] = `${field} must be no more than ${rules.maxLength} characters`;\r\n        return;\r\n      }\r\n      \r\n      if (rules.pattern && !rules.pattern.test(sanitizedValue)) {\r\n        errors[field] = rules.message || `${field} format is invalid`;\r\n        return;\r\n      }\r\n      \r\n      sanitizedData[field] = sanitizedValue;\r\n    }\r\n  });\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors,\r\n    sanitizedData\r\n  };\r\n};\r\n\r\n// Export default security configuration\r\nexport default {\r\n  CSP_HEADERS,\r\n  RATE_LIMIT_CONFIG,\r\n  sanitizeInput,\r\n  validateEmail,\r\n  validateName,\r\n  validateMessage,\r\n  escapeHtml,\r\n  generateCSRFToken,\r\n  validateCSRFToken,\r\n  validatePasswordStrength,\r\n  validateFileUpload,\r\n  createSecureSession,\r\n  isSessionValid,\r\n  createAPIKey,\r\n  validateAPIKey,\r\n  logSecurityEvent,\r\n  isProduction,\r\n  getSecurityHeaders,\r\n  secureFormSubmission\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}